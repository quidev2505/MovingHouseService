{"version":3,"file":"render.js","sourceRoot":"","sources":["../src/render.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { ReactElement } from 'react';\nimport renderers, { renderBlock, renderInline, renderNoop } from './renderers';\nimport { Text, View } from '@react-pdf/renderer';\nimport parseHtml, { HtmlContent, HtmlElement } from './parse';\nimport { createHtmlStylesheet, HtmlStyle, HtmlStyles } from './styles';\nimport { Style } from '@react-pdf/types';\nimport { isText, Tag } from './tags';\n\nexport type HtmlRenderer = React.FC<\n  React.PropsWithChildren<{\n    element: HtmlElement;\n    style: Style[];\n    stylesheets: HtmlStyles[];\n  }>\n>;\n\nexport type HtmlRenderers = Record<Tag | string, HtmlRenderer>;\n\nexport type HtmlRenderOptions = {\n  collapse: boolean;\n  renderers: HtmlRenderers;\n  stylesheets: HtmlStyles[];\n  resetStyles: boolean;\n};\n\ntype ContentBucket = {\n  hasBlock: boolean;\n  content: HtmlContent;\n};\n\nconst convertEntities = (input: string) => {\n  const entities = [\n    ['amp', '&'],\n    ['apos', \"'\"],\n    ['#x27', \"'\"],\n    ['#x2F', '/'],\n    ['#39', \"'\"],\n    ['#47', '/'],\n    ['lt', '<'],\n    ['gt', '>'],\n    ['nbsp', ' '],\n    ['quot', '\"'],\n  ];\n\n  let text = input;\n  for (let entity of entities) {\n    text = text.replace(new RegExp('&' + entity[0] + ';', 'g'), entity[1]);\n  }\n  return text;\n};\n\nexport const isBlockStyle = (style: HtmlStyle) =>\n  ['block', 'flex'].includes(style.display);\n\nexport const hasBlockContent = (element: HtmlElement | string): boolean => {\n  if (typeof element === 'string') {\n    return false;\n  }\n\n  if (element.tag === 'a' || isText[element.tag]) {\n    if (element.style?.some(isBlockStyle)) {\n      return true;\n    }\n\n    // anchor tags match their content\n    if (element.content) {\n      return element.content.some(hasBlockContent);\n    }\n    return false;\n  }\n\n  return true;\n};\n\nconst ltrim = (text: string): string => text.replace(/^\\s+/, '');\nconst rtrim = (text: string): string => text.replace(/\\s+$/, '');\n\n/**\n * Groups all block and non-block elements into buckets so that all non-block elements can be rendered in a parent Text element\n * @param elements Elements to place in buckets of block and non-block content\n * @param collapse\n * @param parentTag\n */\nexport const bucketElements = (\n  elements: HtmlContent,\n  collapse: boolean,\n  parentTag?: Tag | string\n): ContentBucket[] => {\n  let bucket: ContentBucket;\n  let hasBlock: boolean;\n  const buckets: ContentBucket[] = [];\n  elements.forEach((element, index) => {\n    // clear empty strings between block elements\n    if (typeof element === 'string') {\n      if (collapse) {\n        if (parentTag === 'pre') {\n          if (element[0] === '\\n') {\n            element = element.substr(1);\n          }\n          if (element[element.length - 1] === '\\n') {\n            element = element.substr(0, element.length - 1);\n          }\n        } else {\n          if (hasBlock || hasBlock === undefined) {\n            element = ltrim(element);\n          }\n          const next = elements[index + 1];\n          if (next && hasBlockContent(next)) {\n            element = rtrim(element);\n          }\n        }\n      }\n      if (element === '') {\n        return;\n      }\n    }\n    const block = hasBlockContent(element);\n    if (block !== hasBlock) {\n      hasBlock = block;\n      bucket = {\n        hasBlock,\n        content: [],\n      };\n      buckets.push(bucket);\n    }\n    bucket.content.push(element);\n  });\n\n  return buckets;\n};\n\ntype RenderedContent = ReactElement | ReactElement[] | string | string[];\n\nexport const renderElement = (\n  element: HtmlElement | string,\n  stylesheets: HtmlStyles[],\n  renderers: HtmlRenderers,\n  children?: any,\n  index?: number\n): RenderedContent => {\n  if (typeof element === 'string') {\n    element = convertEntities(element);\n    if (/(\\s )|( \\s)/.test(element)) {\n      // hack to avoid collapsing sequential spaces\n      return element\n        .split(/(\\s{2,})/g)\n        .reduce(\n          (strings, string, index) =>\n            string === ''\n              ? strings\n              : strings.concat(index % 2 ? string.split('') : string),\n          [] as string[]\n        );\n    }\n    return element;\n  }\n  let Element: HtmlRenderer | undefined = renderers[element.tag];\n  if (!Element) {\n    if (!(element.tag in isText)) {\n      // Unknown element, do nothing\n      console.warn(`Excluding \"${element.tag}\" because it has no renderer`);\n      Element = renderNoop;\n    } else {\n      Element = hasBlockContent(element) ? renderBlock : renderInline;\n    }\n  }\n\n  return (\n    <Element\n      key={index}\n      style={element.style}\n      children={children}\n      element={element}\n      stylesheets={stylesheets}\n    />\n  );\n};\n\nexport const collapseWhitespace = (string: any): string =>\n  string.replace(/(\\s+)/g, ' ');\n\nexport const renderBucketElement = (\n  element: HtmlElement | string,\n  options: HtmlRenderOptions,\n  index: number\n): RenderedContent => {\n  if (typeof element === 'string') {\n    return renderElement(\n      options.collapse ? collapseWhitespace(element) : element,\n      options.stylesheets,\n      options.renderers,\n      undefined,\n      index\n    );\n  }\n  return renderElement(\n    element,\n    options.stylesheets,\n    options.renderers,\n    renderElements(\n      element.content,\n      element.tag === 'pre' ? { ...options, collapse: false } : options,\n      element\n    ),\n    index\n  );\n};\n\nconst isAnchor = (content: HtmlContent | HtmlElement): boolean => {\n  return Array.isArray(content)\n    ? content.length === 1 &&\n        typeof content[0] !== 'string' &&\n        content[0].tag === 'a'\n    : content.tag === 'a';\n};\n\nexport const renderElements = (\n  elements: HtmlContent,\n  options: HtmlRenderOptions,\n  parent?: HtmlElement\n): RenderedContent | RenderedContent[] => {\n  const buckets = bucketElements(elements, options.collapse, parent?.tag);\n  const parentIsText = parent && !isAnchor(parent) && !hasBlockContent(parent);\n\n  const renderedBuckets: (RenderedContent[] | RenderedContent)[] = buckets.map(\n    (bucket, bucketIndex) => {\n      const wrapWithText =\n        !bucket.hasBlock && !parentIsText && !isAnchor(bucket.content);\n\n      // Avoid extra array\n      if (bucket.content.length === 1 && !wrapWithText) {\n        return renderBucketElement(bucket.content[0], options, bucketIndex);\n      }\n\n      let rendered: RenderedContent | RenderedContent[] = bucket.content.map(\n        (element, index) => {\n          return renderBucketElement(element, options, index);\n        }\n      );\n\n      // unwrap extra array\n      if (rendered.length === 1) {\n        rendered = rendered[0];\n      }\n\n      if (wrapWithText) {\n        return <Text key={bucketIndex}>{rendered}</Text>;\n      } else {\n        return buckets.length === 1 ? (\n          rendered\n        ) : (\n          <React.Fragment key={bucketIndex}>{rendered}</React.Fragment>\n        );\n      }\n    }\n  );\n\n  // unwrap extra array\n  return buckets.length === 1\n    ? (renderedBuckets[0] as RenderedContent)\n    : (renderedBuckets as RenderedContent[]);\n};\n\nexport const applyStylesheets = (\n  stylesheets: HtmlStyles[],\n  rootElement: HtmlElement\n) => {\n  stylesheets.forEach((stylesheet) => {\n    for (const selector of Object.keys(stylesheet)) {\n      const elements = rootElement.querySelectorAll(selector) as HtmlElement[];\n      elements.forEach((element) => {\n        element.style.push(stylesheet[selector]);\n      });\n    }\n  });\n};\n\nconst renderHtml = (\n  text: string,\n  options: {\n    collapse?: boolean;\n    renderers?: HtmlRenderers;\n    style?: Style | (Style | undefined)[];\n    stylesheet?: HtmlStyles | HtmlStyles[];\n    resetStyles?: boolean;\n  } = {}\n): ReactElement => {\n  const defaultFontSize = 18;\n  const fontSizeStyle = { fontSize: defaultFontSize };\n  const styles = options.style\n    ? Array.isArray(options.style)\n      ? options.style\n      : [options.style]\n    : [];\n\n  styles.forEach((style) => {\n    if (!style) {\n      return;\n    }\n    if (typeof style.fontSize === 'number') {\n      fontSizeStyle.fontSize = style.fontSize as unknown as number;\n    }\n    if (typeof style.fontSize === 'string' && style.fontSize.endsWith('px')) {\n      fontSizeStyle.fontSize = parseInt(style.fontSize, 10);\n    }\n  });\n  const baseStyles = createHtmlStylesheet(\n    fontSizeStyle.fontSize,\n    options.resetStyles\n  );\n  const parsed = parseHtml(text);\n\n  const stylesheets = options.stylesheet\n    ? Array.isArray(options.stylesheet)\n      ? options.stylesheet\n      : [options.stylesheet]\n    : [];\n\n  const opts: HtmlRenderOptions = {\n    collapse: true,\n    resetStyles: false,\n    ...options,\n    renderers: { ...renderers, ...options.renderers },\n    stylesheets: [baseStyles, ...stylesheets, ...parsed.stylesheets],\n  };\n\n  applyStylesheets(opts.stylesheets, parsed.rootElement);\n\n  return (\n    <View style={{ ...styles, ...fontSizeStyle }}>\n      {renderElements(parsed.rootElement.content, opts)}\n    </View>\n  );\n};\n\nexport default renderHtml;\n"]}